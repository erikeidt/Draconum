
/*
 *
 * Copyright (c) 2018, Erik L. Eidt
 * All rights Reserved.
 *
 * Author: Erik L. Eidt
 * Created: 01-11-2018
 *
 * License: No License: no permissions are granted to use, modify, or share. See COPYRIGHT.md for more details.
 *
 */

namespace com.erikeidt.Draconum {
	class Operators {
		public enum Operator : byte {
			None,
			PrecedenceGroupingParenthesis,
			PostfixIncrement,
			PostfixDecrement,
			FunctionCall,
			EmptyArgumentList,
			CloseParenOrArgList,
			Subscript,
			EmptySubscript,
			CloseSubscript,
			Selection,
			IndirectSelection,
			PrefixIncrement,
			PrefixDecrement,
			FixPoint,
			Negation,
			LogicalNot,
			BitwiseComplement,
			Indirection,
			AddressOf,
			SelectionReference,
			IndirectSelectionReference,
			Multiplication,
			Division,
			Modulo,
			Addition,
			Subtraction,
			BitwiseLeftShift,
			BitwiseRightShift,
			Order,
			LessThan,
			LessOrEqual,
			GreaterThan,
			GreaterOrEqual,
			EqualEqual,
			NotEqual,
			BitwiseAnd,
			BitwiseXor,
			BitwiseOr,
			ShortCircutAnd,
			ShortCircutOr,
			TernaryTest,
			TernaryChoice,
			Assignment,
			AssignmentMultiplication,
			AssignmentDivision,
			AssignmentModulo,
			AssignmentAddition,
			AssignmentSubtraction,
			AssignmentBitwiseAnd,
			AssignmentBitwiseXor,
			AssignmentBitwiseOr,
			AssignmentBitwiseLeftShift,
			AssignmentBitwiseRightShift,
			ExpressionSeparator,
			ArgumentSeparator,
		}

		public static byte [] Precedence = {
			1,
			1,
			5,
			5,
			5,
			1,
			1,
			5,
			1,
			1,
			5,
			5,
			6,
			6,
			6,
			6,
			6,
			6,
			6,
			6,
			9,
			9,
			11,
			11,
			11,
			13,
			13,
			15,
			15,
			17,
			19,
			19,
			19,
			19,
			21,
			21,
			23,
			25,
			27,
			29,
			31,
			32,
			32,
			34,
			34,
			34,
			34,
			34,
			34,
			34,
			34,
			34,
			34,
			34,
			37,
			37,
		};

		public static byte [] Arity = {
			0,
			0,
			1,
			1,
			2,
			0,
			0,
			2,
			0,
			0,
			2,
			2,
			1,
			1,
			1,
			1,
			1,
			1,
			1,
			1,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			0,
			3,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
			2,
		};
	}
}
